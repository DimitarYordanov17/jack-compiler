// bootstrap code 
@256
D=A
@SP
M=D
// function Ball.new 0
(Ball.new)
// push constant 15
@15
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Memory.alloc 1
@Ball:Memory.alloc:12:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(Ball:Memory.alloc:12:RETURN)
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push argument 2
@ARG
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 10
@THIS
D=M
@10
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push argument 3
@ARG
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 6
@6
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// pop this 11
@THIS
D=M
@11
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push argument 4
@ARG
D=M
@4
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 12
@THIS
D=M
@12
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push argument 5
@ARG
D=M
@5
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 6
@6
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// pop this 13
@THIS
D=M
@13
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 14
@THIS
D=M
@14
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Ball.show 1
@Ball:Ball.show:347:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.show
0;JMP
(Ball:Ball.show:347:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.dispose 0
(Ball.dispose)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Memory.deAlloc 1
@Ball:Memory.deAlloc:535:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(Ball:Memory.deAlloc:535:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.show 0
(Ball.show)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 1
@1
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=-D
@SP
M=M+1
// call Screen.setColor 1
@Ball:Screen.setColor:731:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Ball:Screen.setColor:731:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Ball.draw 1
@Ball:Ball.draw:821:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.draw
0;JMP
(Ball:Ball.draw:821:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.hide 0
(Ball.hide)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.setColor 1
@Ball:Screen.setColor:1007:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Ball:Screen.setColor:1007:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Ball.draw 1
@Ball:Ball.draw:1097:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.draw
0;JMP
(Ball:Ball.draw:1097:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.draw 0
(Ball.draw)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 5
@5
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 5
@5
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// call Screen.drawRectangle 4
@Ball:Screen.drawRectangle:1380:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@4
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Ball:Screen.drawRectangle:1380:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.getLeft 0
(Ball.getLeft)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.getRight 0
(Ball.getRight)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 5
@5
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.setDestination 3
(Ball.setDestination)
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// pop this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push argument 2
@ARG
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// pop this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Math.abs 1
@Ball:Math.abs:1942:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Ball:Math.abs:1942:RETURN)
// pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Math.abs 1
@Ball:Math.abs:2036:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.abs
0;JMP
(Ball:Math.abs:2036:RETURN)
// pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Ball::2161:WRITENONE
D;JLT
@SP
A=M
M=0
@Ball::2164:INCREMENTSP
0;JMP
(Ball::2161:WRITENONE)
@SP
A=M
M=-1
(Ball::2164:INCREMENTSP)
@SP
M=M+1
// pop this 7
@THIS
D=M
@7
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 7
@THIS
D=M
@7
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto setDestination:ifStatement:27:EXECUTE_SECOND_STATEMENT
@SP
M=M-1
@SP
A=M
D=M
@setDestination:ifStatement:27:EXECUTE_SECOND_STATEMENT
D;JNE
// push local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push argument 2
@ARG
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Ball::2342:WRITENONE
D;JLT
@SP
A=M
M=0
@Ball::2345:INCREMENTSP
0;JMP
(Ball::2342:WRITENONE)
@SP
A=M
M=-1
(Ball::2345:INCREMENTSP)
@SP
M=M+1
// pop this 8
@THIS
D=M
@8
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Ball::2408:WRITENONE
D;JLT
@SP
A=M
M=0
@Ball::2411:INCREMENTSP
0;JMP
(Ball::2408:WRITENONE)
@SP
A=M
M=-1
(Ball::2411:INCREMENTSP)
@SP
M=M+1
// pop this 9
@THIS
D=M
@9
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// goto setDestination:ifStatement:27:END
@setDestination:ifStatement:27:END
0;JMP
// label setDestination:ifStatement:27:EXECUTE_SECOND_STATEMENT
(setDestination:ifStatement:27:EXECUTE_SECOND_STATEMENT)
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Ball::2477:WRITENONE
D;JLT
@SP
A=M
M=0
@Ball::2480:INCREMENTSP
0;JMP
(Ball::2477:WRITENONE)
@SP
A=M
M=-1
(Ball::2480:INCREMENTSP)
@SP
M=M+1
// pop this 8
@THIS
D=M
@8
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push argument 2
@ARG
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Ball::2543:WRITENONE
D;JLT
@SP
A=M
M=0
@Ball::2546:INCREMENTSP
0;JMP
(Ball::2543:WRITENONE)
@SP
A=M
M=-1
(Ball::2546:INCREMENTSP)
@SP
M=M+1
// pop this 9
@THIS
D=M
@9
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label setDestination:ifStatement:27:END
(setDestination:ifStatement:27:END)
// push constant 2
@2
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Math.multiply 2
@Ball:Math.multiply:2590:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball:Math.multiply:2590:RETURN)
// push local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// pop this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 2
@2
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Math.multiply 2
@Ball:Math.multiply:2724:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball:Math.multiply:2724:RETURN)
// pop this 5
@THIS
D=M
@5
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 2
@2
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// call Math.multiply 2
@Ball:Math.multiply:2858:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball:Math.multiply:2858:RETURN)
// pop this 6
@THIS
D=M
@6
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.move 0
(Ball.move)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Ball.hide 1
@Ball:Ball.hide:3047:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.hide
0;JMP
(Ball:Ball.hide:3047:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Ball::3167:WRITENONE
D;JLT
@SP
A=M
M=0
@Ball::3170:INCREMENTSP
0;JMP
(Ball::3167:WRITENONE)
@SP
A=M
M=-1
(Ball::3170:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto move:ifStatement:40:EXECUTE_SECOND_STATEMENT
@SP
M=M-1
@SP
A=M
D=M
@move:ifStatement:40:EXECUTE_SECOND_STATEMENT
D;JNE
// push this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 5
@THIS
D=M
@5
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// pop this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// goto move:ifStatement:40:END
@move:ifStatement:40:END
0;JMP
// label move:ifStatement:40:EXECUTE_SECOND_STATEMENT
(move:ifStatement:40:EXECUTE_SECOND_STATEMENT)
// push this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 6
@THIS
D=M
@6
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// pop this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 9
@THIS
D=M
@9
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto move:ifStatement:43:EXECUTE_SECOND_STATEMENT
@SP
M=M-1
@SP
A=M
D=M
@move:ifStatement:43:EXECUTE_SECOND_STATEMENT
D;JNE
// push this 7
@THIS
D=M
@7
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto move:ifStatement:44:EXECUTE_SECOND_STATEMENT
@SP
M=M-1
@SP
A=M
D=M
@move:ifStatement:44:EXECUTE_SECOND_STATEMENT
D;JNE
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 4
@4
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// goto move:ifStatement:44:END
@move:ifStatement:44:END
0;JMP
// label move:ifStatement:44:EXECUTE_SECOND_STATEMENT
(move:ifStatement:44:EXECUTE_SECOND_STATEMENT)
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 4
@4
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label move:ifStatement:44:END
(move:ifStatement:44:END)
// goto move:ifStatement:43:END
@move:ifStatement:43:END
0;JMP
// label move:ifStatement:43:EXECUTE_SECOND_STATEMENT
(move:ifStatement:43:EXECUTE_SECOND_STATEMENT)
// push this 7
@THIS
D=M
@7
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto move:ifStatement:47:EXECUTE_SECOND_STATEMENT
@SP
M=M-1
@SP
A=M
D=M
@move:ifStatement:47:EXECUTE_SECOND_STATEMENT
D;JNE
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 4
@4
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// goto move:ifStatement:47:END
@move:ifStatement:47:END
0;JMP
// label move:ifStatement:47:EXECUTE_SECOND_STATEMENT
(move:ifStatement:47:EXECUTE_SECOND_STATEMENT)
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 4
@4
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label move:ifStatement:47:END
(move:ifStatement:47:END)
// label move:ifStatement:43:END
(move:ifStatement:43:END)
// label move:ifStatement:40:END
(move:ifStatement:40:END)
// push this 8
@THIS
D=M
@8
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto move:ifStatement:50:EXECUTE_SECOND_STATEMENT
@SP
M=M-1
@SP
A=M
D=M
@move:ifStatement:50:EXECUTE_SECOND_STATEMENT
D;JNE
// push this 7
@THIS
D=M
@7
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto move:ifStatement:51:EXECUTE_SECOND_STATEMENT
@SP
M=M-1
@SP
A=M
D=M
@move:ifStatement:51:EXECUTE_SECOND_STATEMENT
D;JNE
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 4
@4
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// goto move:ifStatement:51:END
@move:ifStatement:51:END
0;JMP
// label move:ifStatement:51:EXECUTE_SECOND_STATEMENT
(move:ifStatement:51:EXECUTE_SECOND_STATEMENT)
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 4
@4
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label move:ifStatement:51:END
(move:ifStatement:51:END)
// goto move:ifStatement:50:END
@move:ifStatement:50:END
0;JMP
// label move:ifStatement:50:EXECUTE_SECOND_STATEMENT
(move:ifStatement:50:EXECUTE_SECOND_STATEMENT)
// push this 7
@THIS
D=M
@7
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto move:ifStatement:54:EXECUTE_SECOND_STATEMENT
@SP
M=M-1
@SP
A=M
D=M
@move:ifStatement:54:EXECUTE_SECOND_STATEMENT
D;JNE
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 4
@4
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// goto move:ifStatement:54:END
@move:ifStatement:54:END
0;JMP
// label move:ifStatement:54:EXECUTE_SECOND_STATEMENT
(move:ifStatement:54:EXECUTE_SECOND_STATEMENT)
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 4
@4
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label move:ifStatement:54:END
(move:ifStatement:54:END)
// label move:ifStatement:50:END
(move:ifStatement:50:END)
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 10
@THIS
D=M
@10
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Ball::3996:WRITENONE
D;JGT
@SP
A=M
M=0
@Ball::3999:INCREMENTSP
0;JMP
(Ball::3996:WRITENONE)
@SP
A=M
M=-1
(Ball::3999:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto move:ifStatement:57:END
@SP
M=M-1
@SP
A=M
D=M
@move:ifStatement:57:END
D;JNE
// push constant 1
@1
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 14
@THIS
D=M
@14
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 10
@THIS
D=M
@10
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label move:ifStatement:57:END
(move:ifStatement:57:END)
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 11
@THIS
D=M
@11
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Ball::4129:WRITENONE
D;JLT
@SP
A=M
M=0
@Ball::4132:INCREMENTSP
0;JMP
(Ball::4129:WRITENONE)
@SP
A=M
M=-1
(Ball::4132:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto move:ifStatement:60:END
@SP
M=M-1
@SP
A=M
D=M
@move:ifStatement:60:END
D;JNE
// push constant 2
@2
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 14
@THIS
D=M
@14
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 11
@THIS
D=M
@11
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label move:ifStatement:60:END
(move:ifStatement:60:END)
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 12
@THIS
D=M
@12
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Ball::4262:WRITENONE
D;JGT
@SP
A=M
M=0
@Ball::4265:INCREMENTSP
0;JMP
(Ball::4262:WRITENONE)
@SP
A=M
M=-1
(Ball::4265:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto move:ifStatement:63:END
@SP
M=M-1
@SP
A=M
D=M
@move:ifStatement:63:END
D;JNE
// push constant 3
@3
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 14
@THIS
D=M
@14
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 12
@THIS
D=M
@12
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label move:ifStatement:63:END
(move:ifStatement:63:END)
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 13
@THIS
D=M
@13
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Ball::4395:WRITENONE
D;JLT
@SP
A=M
M=0
@Ball::4398:INCREMENTSP
0;JMP
(Ball::4395:WRITENONE)
@SP
A=M
M=-1
(Ball::4398:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto move:ifStatement:66:END
@SP
M=M-1
@SP
A=M
D=M
@move:ifStatement:66:END
D;JNE
// push constant 4
@4
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 14
@THIS
D=M
@14
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 13
@THIS
D=M
@13
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label move:ifStatement:66:END
(move:ifStatement:66:END)
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Ball.show 1
@Ball:Ball.show:4495:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.show
0;JMP
(Ball:Ball.show:4495:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 14
@THIS
D=M
@14
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Ball.bounce 5
(Ball.bounce)
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 10
@10
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Math.divide 2
@Ball:Math.divide:4753:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Ball:Math.divide:4753:RETURN)
// pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 10
@10
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Math.divide 2
@Ball:Math.divide:4858:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Ball:Math.divide:4858:RETURN)
// pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Ball::4980:WRITENONE
D;JEQ
@SP
A=M
M=0
@Ball::4983:INCREMENTSP
0;JMP
(Ball::4980:WRITENONE)
@SP
A=M
M=-1
(Ball::4983:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto bounce:ifStatement:73:EXECUTE_SECOND_STATEMENT
@SP
M=M-1
@SP
A=M
D=M
@bounce:ifStatement:73:EXECUTE_SECOND_STATEMENT
D;JNE
// push constant 10
@10
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// goto bounce:ifStatement:73:END
@bounce:ifStatement:73:END
0;JMP
// label bounce:ifStatement:73:EXECUTE_SECOND_STATEMENT
(bounce:ifStatement:73:EXECUTE_SECOND_STATEMENT)
// push this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Ball::5074:WRITENONE
D;JLT
@SP
A=M
M=0
@Ball::5077:INCREMENTSP
0;JMP
(Ball::5074:WRITENONE)
@SP
A=M
M=-1
(Ball::5077:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// push argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Ball::5133:WRITENONE
D;JEQ
@SP
A=M
M=0
@Ball::5136:INCREMENTSP
0;JMP
(Ball::5133:WRITENONE)
@SP
A=M
M=-1
(Ball::5136:INCREMENTSP)
@SP
M=M+1
// and
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Ball::5197:WRITENONE
D;JLT
@SP
A=M
M=0
@Ball::5200:INCREMENTSP
0;JMP
(Ball::5197:WRITENONE)
@SP
A=M
M=-1
(Ball::5200:INCREMENTSP)
@SP
M=M+1
// push argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=-D
@SP
M=M+1
// eq
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Ball::5256:WRITENONE
D;JEQ
@SP
A=M
M=0
@Ball::5259:INCREMENTSP
0;JMP
(Ball::5256:WRITENONE)
@SP
A=M
M=-1
(Ball::5259:INCREMENTSP)
@SP
M=M+1
// and
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
// or
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto bounce:ifStatement:75:EXECUTE_SECOND_STATEMENT
@SP
M=M-1
@SP
A=M
D=M
@bounce:ifStatement:75:EXECUTE_SECOND_STATEMENT
D;JNE
// push constant 20
@20
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// goto bounce:ifStatement:75:END
@bounce:ifStatement:75:END
0;JMP
// label bounce:ifStatement:75:EXECUTE_SECOND_STATEMENT
(bounce:ifStatement:75:EXECUTE_SECOND_STATEMENT)
// push constant 5
@5
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label bounce:ifStatement:75:END
(bounce:ifStatement:75:END)
// label bounce:ifStatement:73:END
(bounce:ifStatement:73:END)
// push this 14
@THIS
D=M
@14
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Ball::5407:WRITENONE
D;JEQ
@SP
A=M
M=0
@Ball::5410:INCREMENTSP
0;JMP
(Ball::5407:WRITENONE)
@SP
A=M
M=-1
(Ball::5410:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto bounce:ifStatement:78:EXECUTE_SECOND_STATEMENT
@SP
M=M-1
@SP
A=M
D=M
@bounce:ifStatement:78:EXECUTE_SECOND_STATEMENT
D;JNE
// push constant 506
@506
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 50
@50
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=-D
@SP
M=M+1
// call Math.multiply 2
@Ball:Math.multiply:5491:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball:Math.multiply:5491:RETURN)
// push local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Math.divide 2
@Ball:Math.divide:5571:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Ball:Math.divide:5571:RETURN)
// pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Math.multiply 2
@Ball:Math.multiply:5693:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball:Math.multiply:5693:RETURN)
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// goto bounce:ifStatement:78:END
@bounce:ifStatement:78:END
0;JMP
// label bounce:ifStatement:78:EXECUTE_SECOND_STATEMENT
(bounce:ifStatement:78:EXECUTE_SECOND_STATEMENT)
// push this 14
@THIS
D=M
@14
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 2
@2
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Ball::5833:WRITENONE
D;JEQ
@SP
A=M
M=0
@Ball::5836:INCREMENTSP
0;JMP
(Ball::5833:WRITENONE)
@SP
A=M
M=-1
(Ball::5836:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto bounce:ifStatement:82:EXECUTE_SECOND_STATEMENT
@SP
M=M-1
@SP
A=M
D=M
@bounce:ifStatement:82:EXECUTE_SECOND_STATEMENT
D;JNE
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 50
@50
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Math.multiply 2
@Ball:Math.multiply:5907:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball:Math.multiply:5907:RETURN)
// push local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Math.divide 2
@Ball:Math.divide:5987:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Ball:Math.divide:5987:RETURN)
// pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Math.multiply 2
@Ball:Math.multiply:6109:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball:Math.multiply:6109:RETURN)
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// goto bounce:ifStatement:82:END
@bounce:ifStatement:82:END
0;JMP
// label bounce:ifStatement:82:EXECUTE_SECOND_STATEMENT
(bounce:ifStatement:82:EXECUTE_SECOND_STATEMENT)
// push this 14
@THIS
D=M
@14
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 3
@3
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Ball::6249:WRITENONE
D;JEQ
@SP
A=M
M=0
@Ball::6252:INCREMENTSP
0;JMP
(Ball::6249:WRITENONE)
@SP
A=M
M=-1
(Ball::6252:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto bounce:ifStatement:86:EXECUTE_SECOND_STATEMENT
@SP
M=M-1
@SP
A=M
D=M
@bounce:ifStatement:86:EXECUTE_SECOND_STATEMENT
D;JNE
// push constant 250
@250
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 25
@25
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=-D
@SP
M=M+1
// call Math.multiply 2
@Ball:Math.multiply:6333:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball:Math.multiply:6333:RETURN)
// push local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Math.divide 2
@Ball:Math.divide:6413:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Ball:Math.divide:6413:RETURN)
// pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Math.multiply 2
@Ball:Math.multiply:6535:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball:Math.multiply:6535:RETURN)
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// goto bounce:ifStatement:86:END
@bounce:ifStatement:86:END
0;JMP
// label bounce:ifStatement:86:EXECUTE_SECOND_STATEMENT
(bounce:ifStatement:86:EXECUTE_SECOND_STATEMENT)
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 25
@25
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Math.multiply 2
@Ball:Math.multiply:6683:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball:Math.multiply:6683:RETURN)
// push local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Math.divide 2
@Ball:Math.divide:6763:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.divide
0;JMP
(Ball:Math.divide:6763:RETURN)
// pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Math.multiply 2
@Ball:Math.multiply:6885:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Math.multiply
0;JMP
(Ball:Math.multiply:6885:RETURN)
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label bounce:ifStatement:86:END
(bounce:ifStatement:86:END)
// label bounce:ifStatement:82:END
(bounce:ifStatement:82:END)
// label bounce:ifStatement:78:END
(bounce:ifStatement:78:END)
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Ball.setDestination 3
@Ball:Ball.setDestination:7023:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@3
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.setDestination
0;JMP
(Ball:Ball.setDestination:7023:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.new 0
(Bat.new)
// push constant 5
@5
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Memory.alloc 1
@Bat:Memory.alloc:12:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(Bat:Memory.alloc:12:RETURN)
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push argument 2
@ARG
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push argument 3
@ARG
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 2
@2
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Bat.show 1
@Bat:Bat.show:239:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.show
0;JMP
(Bat:Bat.show:239:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.dispose 0
(Bat.dispose)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Memory.deAlloc 1
@Bat:Memory.deAlloc:427:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(Bat:Memory.deAlloc:427:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.show 0
(Bat.show)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 1
@1
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=-D
@SP
M=M+1
// call Screen.setColor 1
@Bat:Screen.setColor:623:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Bat:Screen.setColor:623:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Bat.draw 1
@Bat:Bat.draw:713:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.draw
0;JMP
(Bat:Bat.draw:713:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.hide 0
(Bat.hide)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.setColor 1
@Bat:Screen.setColor:899:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Bat:Screen.setColor:899:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Bat.draw 1
@Bat:Bat.draw:989:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.draw
0;JMP
(Bat:Bat.draw:989:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.draw 0
(Bat.draw)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// call Screen.drawRectangle 4
@Bat:Screen.drawRectangle:1278:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@4
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Bat:Screen.drawRectangle:1278:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.setDirection 0
(Bat.setDirection)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.getLeft 0
(Bat.getLeft)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.getRight 0
(Bat.getRight)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.setWidth 0
(Bat.setWidth)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Bat.hide 1
@Bat:Bat.hide:1819:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.hide
0;JMP
(Bat:Bat.hide:1819:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push argument 1
@ARG
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Bat.show 1
@Bat:Bat.show:1937:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.show
0;JMP
(Bat:Bat.show:1937:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Bat.move 0
(Bat.move)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Bat::2154:WRITENONE
D;JEQ
@SP
A=M
M=0
@Bat::2157:INCREMENTSP
0;JMP
(Bat::2154:WRITENONE)
@SP
A=M
M=-1
(Bat::2157:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto move:ifStatement:26:EXECUTE_SECOND_STATEMENT
@SP
M=M-1
@SP
A=M
D=M
@move:ifStatement:26:EXECUTE_SECOND_STATEMENT
D;JNE
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 4
@4
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Bat::2274:WRITENONE
D;JLT
@SP
A=M
M=0
@Bat::2277:INCREMENTSP
0;JMP
(Bat::2274:WRITENONE)
@SP
A=M
M=-1
(Bat::2277:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto move:ifStatement:28:END
@SP
M=M-1
@SP
A=M
D=M
@move:ifStatement:28:END
D;JNE
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label move:ifStatement:28:END
(move:ifStatement:28:END)
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.setColor 1
@Bat:Screen.setColor:2335:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Bat:Screen.setColor:2335:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// push constant 4
@4
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// call Screen.drawRectangle 4
@Bat:Screen.drawRectangle:2608:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@4
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Bat:Screen.drawRectangle:2608:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 1
@1
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=-D
@SP
M=M+1
// call Screen.setColor 1
@Bat:Screen.setColor:2707:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Bat:Screen.setColor:2707:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 3
@3
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// call Screen.drawRectangle 4
@Bat:Screen.drawRectangle:2896:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@4
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Bat:Screen.drawRectangle:2896:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// goto move:ifStatement:26:END
@move:ifStatement:26:END
0;JMP
// label move:ifStatement:26:EXECUTE_SECOND_STATEMENT
(move:ifStatement:26:EXECUTE_SECOND_STATEMENT)
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 4
@4
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// push constant 511
@511
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@Bat::3102:WRITENONE
D;JGT
@SP
A=M
M=0
@Bat::3105:INCREMENTSP
0;JMP
(Bat::3102:WRITENONE)
@SP
A=M
M=-1
(Bat::3105:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto move:ifStatement:35:END
@SP
M=M-1
@SP
A=M
D=M
@move:ifStatement:35:END
D;JNE
// push constant 511
@511
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label move:ifStatement:35:END
(move:ifStatement:35:END)
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.setColor 1
@Bat:Screen.setColor:3192:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Bat:Screen.setColor:3192:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 4
@4
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// call Screen.drawRectangle 4
@Bat:Screen.drawRectangle:3407:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@4
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Bat:Screen.drawRectangle:3407:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 1
@1
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=-D
@SP
M=M+1
// call Screen.setColor 1
@Bat:Screen.setColor:3506:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Bat:Screen.setColor:3506:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// push constant 3
@3
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// call Screen.drawRectangle 4
@Bat:Screen.drawRectangle:3753:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@4
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Bat:Screen.drawRectangle:3753:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label move:ifStatement:26:END
(move:ifStatement:26:END)
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function PongGame.new 0
(PongGame.new)
// push constant 7
@7
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Memory.alloc 1
@PongGame:Memory.alloc:12:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(PongGame:Memory.alloc:12:RETURN)
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// call Screen.clearScreen 0
@PongGame:Screen.clearScreen:90:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.clearScreen
0;JMP
(PongGame:Screen.clearScreen:90:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 50
@50
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 6
@THIS
D=M
@6
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 230
@230
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 229
@229
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 6
@THIS
D=M
@6
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 7
@7
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Bat.new 4
@PongGame:Bat.new:240:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@4
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.new
0;JMP
(PongGame:Bat.new:240:RETURN)
// pop this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 253
@253
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 222
@222
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 511
@511
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 229
@229
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Ball.new 6
@PongGame:Ball.new:386:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.new
0;JMP
(PongGame:Ball.new:386:RETURN)
// pop this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 400
@400
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Ball.setDestination 3
@PongGame:Ball.setDestination:502:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@3
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.setDestination
0;JMP
(PongGame:Ball.setDestination:502:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 238
@238
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 511
@511
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 240
@240
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.drawRectangle 4
@PongGame:Screen.drawRectangle:624:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@4
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(PongGame:Screen.drawRectangle:624:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 22
@22
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Output.moveCursor 2
@PongGame:Output.moveCursor:724:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.moveCursor
0;JMP
(PongGame:Output.moveCursor:724:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 8
@8
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.new 1
@PongGame:String.new:813:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(PongGame:String.new:813:RETURN)
// push constant 83
@83
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.appendChar 2
@PongGame:String.appendChar:890:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame:String.appendChar:890:RETURN)
// push constant 99
@99
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.appendChar 2
@PongGame:String.appendChar:967:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame:String.appendChar:967:RETURN)
// push constant 111
@111
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.appendChar 2
@PongGame:String.appendChar:1044:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame:String.appendChar:1044:RETURN)
// push constant 114
@114
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.appendChar 2
@PongGame:String.appendChar:1121:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame:String.appendChar:1121:RETURN)
// push constant 101
@101
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.appendChar 2
@PongGame:String.appendChar:1198:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame:String.appendChar:1198:RETURN)
// push constant 58
@58
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.appendChar 2
@PongGame:String.appendChar:1275:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame:String.appendChar:1275:RETURN)
// push constant 32
@32
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.appendChar 2
@PongGame:String.appendChar:1352:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame:String.appendChar:1352:RETURN)
// push constant 48
@48
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.appendChar 2
@PongGame:String.appendChar:1429:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame:String.appendChar:1429:RETURN)
// call Output.printString 1
@PongGame:Output.printString:1495:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(PongGame:Output.printString:1495:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 5
@THIS
D=M
@5
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function PongGame.dispose 0
(PongGame.dispose)
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Bat.dispose 1
@PongGame:Bat.dispose:1785:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.dispose
0;JMP
(PongGame:Bat.dispose:1785:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Ball.dispose 1
@PongGame:Ball.dispose:1877:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.dispose
0;JMP
(PongGame:Ball.dispose:1877:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Memory.deAlloc 1
@PongGame:Memory.deAlloc:1967:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(PongGame:Memory.deAlloc:1967:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function PongGame.newInstance 0
(PongGame.newInstance)
// call PongGame.new 0
@PongGame:PongGame.new:2116:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.new
0;JMP
(PongGame:PongGame.new:2116:RETURN)
// pop static 0
@PongGame.0
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function PongGame.getInstance 0
(PongGame.getInstance)
// push static 0
@PongGame.0
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function PongGame.run 1
(PongGame.run)
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label run:whileStatement:21:START
(run:whileStatement:21:START)
// push this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto run:whileStatement:21:END
@SP
M=M-1
@SP
A=M
D=M
@run:whileStatement:21:END
D;JNE
// label run:whileStatement:22:START
(run:whileStatement:22:START)
// push local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@PongGame::2459:WRITENONE
D;JEQ
@SP
A=M
M=0
@PongGame::2462:INCREMENTSP
0;JMP
(PongGame::2459:WRITENONE)
@SP
A=M
M=-1
(PongGame::2462:INCREMENTSP)
@SP
M=M+1
// push this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// and
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto run:whileStatement:22:END
@SP
M=M-1
@SP
A=M
D=M
@run:whileStatement:22:END
D;JNE
// call Keyboard.keyPressed 0
@PongGame:Keyboard.keyPressed:2522:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(PongGame:Keyboard.keyPressed:2522:RETURN)
// pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Bat.move 1
@PongGame:Bat.move:2616:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.move
0;JMP
(PongGame:Bat.move:2616:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call PongGame.moveBall 1
@PongGame:PongGame.moveBall:2706:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.moveBall
0;JMP
(PongGame:PongGame.moveBall:2706:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 50
@50
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Sys.wait 1
@PongGame:Sys.wait:2795:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.wait
0;JMP
(PongGame:Sys.wait:2795:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// goto run:whileStatement:22:START
@run:whileStatement:22:START
0;JMP
// label run:whileStatement:22:END
(run:whileStatement:22:END)
// push local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 130
@130
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@PongGame::2918:WRITENONE
D;JEQ
@SP
A=M
M=0
@PongGame::2921:INCREMENTSP
0;JMP
(PongGame::2918:WRITENONE)
@SP
A=M
M=-1
(PongGame::2921:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto run:ifStatement:27:EXECUTE_SECOND_STATEMENT
@SP
M=M-1
@SP
A=M
D=M
@run:ifStatement:27:EXECUTE_SECOND_STATEMENT
D;JNE
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Bat.setDirection 2
@PongGame:Bat.setDirection:2967:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.setDirection
0;JMP
(PongGame:Bat.setDirection:2967:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// goto run:ifStatement:27:END
@run:ifStatement:27:END
0;JMP
// label run:ifStatement:27:EXECUTE_SECOND_STATEMENT
(run:ifStatement:27:EXECUTE_SECOND_STATEMENT)
// push local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 132
@132
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@PongGame::3090:WRITENONE
D;JEQ
@SP
A=M
M=0
@PongGame::3093:INCREMENTSP
0;JMP
(PongGame::3090:WRITENONE)
@SP
A=M
M=-1
(PongGame::3093:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto run:ifStatement:29:EXECUTE_SECOND_STATEMENT
@SP
M=M-1
@SP
A=M
D=M
@run:ifStatement:29:EXECUTE_SECOND_STATEMENT
D;JNE
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 2
@2
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Bat.setDirection 2
@PongGame:Bat.setDirection:3139:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.setDirection
0;JMP
(PongGame:Bat.setDirection:3139:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// goto run:ifStatement:29:END
@run:ifStatement:29:END
0;JMP
// label run:ifStatement:29:EXECUTE_SECOND_STATEMENT
(run:ifStatement:29:EXECUTE_SECOND_STATEMENT)
// push local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 140
@140
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@PongGame::3262:WRITENONE
D;JEQ
@SP
A=M
M=0
@PongGame::3265:INCREMENTSP
0;JMP
(PongGame::3262:WRITENONE)
@SP
A=M
M=-1
(PongGame::3265:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto run:ifStatement:31:END
@SP
M=M-1
@SP
A=M
D=M
@run:ifStatement:31:END
D;JNE
// push constant 1
@1
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=-D
@SP
M=M+1
// pop this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label run:ifStatement:31:END
(run:ifStatement:31:END)
// label run:ifStatement:29:END
(run:ifStatement:29:END)
// label run:ifStatement:27:END
(run:ifStatement:27:END)
// label run:whileStatement:33:START
(run:whileStatement:33:START)
// push local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@PongGame::3367:WRITENONE
D;JEQ
@SP
A=M
M=0
@PongGame::3370:INCREMENTSP
0;JMP
(PongGame::3367:WRITENONE)
@SP
A=M
M=-1
(PongGame::3370:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// push this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// and
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto run:whileStatement:33:END
@SP
M=M-1
@SP
A=M
D=M
@run:whileStatement:33:END
D;JNE
// call Keyboard.keyPressed 0
@PongGame:Keyboard.keyPressed:3440:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(PongGame:Keyboard.keyPressed:3440:RETURN)
// pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Bat.move 1
@PongGame:Bat.move:3534:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.move
0;JMP
(PongGame:Bat.move:3534:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push pointer 0
@THIS
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call PongGame.moveBall 1
@PongGame:PongGame.moveBall:3624:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.moveBall
0;JMP
(PongGame:PongGame.moveBall:3624:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 50
@50
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Sys.wait 1
@PongGame:Sys.wait:3713:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.wait
0;JMP
(PongGame:Sys.wait:3713:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// goto run:whileStatement:33:START
@run:whileStatement:33:START
0;JMP
// label run:whileStatement:33:END
(run:whileStatement:33:END)
// goto run:whileStatement:21:START
@run:whileStatement:21:START
0;JMP
// label run:whileStatement:21:END
(run:whileStatement:21:END)
// push this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto run:ifStatement:38:END
@SP
M=M-1
@SP
A=M
D=M
@run:ifStatement:38:END
D;JNE
// push constant 10
@10
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 27
@27
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Output.moveCursor 2
@PongGame:Output.moveCursor:3850:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.moveCursor
0;JMP
(PongGame:Output.moveCursor:3850:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 9
@9
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.new 1
@PongGame:String.new:3939:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.new
0;JMP
(PongGame:String.new:3939:RETURN)
// push constant 71
@71
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.appendChar 2
@PongGame:String.appendChar:4016:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame:String.appendChar:4016:RETURN)
// push constant 97
@97
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.appendChar 2
@PongGame:String.appendChar:4093:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame:String.appendChar:4093:RETURN)
// push constant 109
@109
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.appendChar 2
@PongGame:String.appendChar:4170:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame:String.appendChar:4170:RETURN)
// push constant 101
@101
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.appendChar 2
@PongGame:String.appendChar:4247:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame:String.appendChar:4247:RETURN)
// push constant 32
@32
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.appendChar 2
@PongGame:String.appendChar:4324:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame:String.appendChar:4324:RETURN)
// push constant 79
@79
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.appendChar 2
@PongGame:String.appendChar:4401:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame:String.appendChar:4401:RETURN)
// push constant 118
@118
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.appendChar 2
@PongGame:String.appendChar:4478:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame:String.appendChar:4478:RETURN)
// push constant 101
@101
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.appendChar 2
@PongGame:String.appendChar:4555:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame:String.appendChar:4555:RETURN)
// push constant 114
@114
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call String.appendChar 2
@PongGame:String.appendChar:4632:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@String.appendChar
0;JMP
(PongGame:String.appendChar:4632:RETURN)
// call Output.printString 1
@PongGame:Output.printString:4698:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printString
0;JMP
(PongGame:Output.printString:4698:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label run:ifStatement:38:END
(run:ifStatement:38:END)
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function PongGame.moveBall 5
(PongGame.moveBall)
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@THIS
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Ball.move 1
@PongGame:Ball.move:4943:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.move
0;JMP
(PongGame:Ball.move:4943:RETURN)
// pop this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@PongGame::5065:WRITENONE
D;JGT
@SP
A=M
M=0
@PongGame::5068:INCREMENTSP
0;JMP
(PongGame::5065:WRITENONE)
@SP
A=M
M=-1
(PongGame::5068:INCREMENTSP)
@SP
M=M+1
// push this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 5
@THIS
D=M
@5
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@PongGame::5117:WRITENONE
D;JEQ
@SP
A=M
M=0
@PongGame::5120:INCREMENTSP
0;JMP
(PongGame::5117:WRITENONE)
@SP
A=M
M=-1
(PongGame::5120:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// and
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M&D
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto moveBall:ifStatement:43:END
@SP
M=M-1
@SP
A=M
D=M
@moveBall:ifStatement:43:END
D;JNE
// push this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 5
@THIS
D=M
@5
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Bat.getLeft 1
@PongGame:Bat.getLeft:5233:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.getLeft
0;JMP
(PongGame:Bat.getLeft:5233:RETURN)
// pop local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Bat.getRight 1
@PongGame:Bat.getRight:5327:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.getRight
0;JMP
(PongGame:Bat.getRight:5327:RETURN)
// pop local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Ball.getLeft 1
@PongGame:Ball.getLeft:5421:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.getLeft
0;JMP
(PongGame:Ball.getLeft:5421:RETURN)
// pop local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Ball.getRight 1
@PongGame:Ball.getRight:5515:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.getRight
0;JMP
(PongGame:Ball.getRight:5515:RETURN)
// pop local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 2
@THIS
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 4
@4
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@PongGame::5637:WRITENONE
D;JEQ
@SP
A=M
M=0
@PongGame::5640:INCREMENTSP
0;JMP
(PongGame::5637:WRITENONE)
@SP
A=M
M=-1
(PongGame::5640:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto moveBall:ifStatement:50:END
@SP
M=M-1
@SP
A=M
D=M
@moveBall:ifStatement:50:END
D;JNE
// push local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@PongGame::5706:WRITENONE
D;JGT
@SP
A=M
M=0
@PongGame::5709:INCREMENTSP
0;JMP
(PongGame::5706:WRITENONE)
@SP
A=M
M=-1
(PongGame::5709:INCREMENTSP)
@SP
M=M+1
// push local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@PongGame::5758:WRITENONE
D;JLT
@SP
A=M
M=0
@PongGame::5761:INCREMENTSP
0;JMP
(PongGame::5758:WRITENONE)
@SP
A=M
M=-1
(PongGame::5761:INCREMENTSP)
@SP
M=M+1
// or
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M|D
@SP
A=M
M=D
@SP
M=M+1
// pop this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 3
@THIS
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto moveBall:ifStatement:52:END
@SP
M=M-1
@SP
A=M
D=M
@moveBall:ifStatement:52:END
D;JNE
// push local 4
@LCL
D=M
@4
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 1
@LCL
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 10
@10
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@PongGame::5906:WRITENONE
D;JLT
@SP
A=M
M=0
@PongGame::5909:INCREMENTSP
0;JMP
(PongGame::5906:WRITENONE)
@SP
A=M
M=-1
(PongGame::5909:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto moveBall:ifStatement:53:EXECUTE_SECOND_STATEMENT
@SP
M=M-1
@SP
A=M
D=M
@moveBall:ifStatement:53:EXECUTE_SECOND_STATEMENT
D;JNE
// push constant 1
@1
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// neg
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=-D
@SP
M=M+1
// pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// goto moveBall:ifStatement:53:END
@moveBall:ifStatement:53:END
0;JMP
// label moveBall:ifStatement:53:EXECUTE_SECOND_STATEMENT
(moveBall:ifStatement:53:EXECUTE_SECOND_STATEMENT)
// push local 3
@LCL
D=M
@3
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 2
@LCL
D=M
@2
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 10
@10
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@PongGame::6039:WRITENONE
D;JGT
@SP
A=M
M=0
@PongGame::6042:INCREMENTSP
0;JMP
(PongGame::6039:WRITENONE)
@SP
A=M
M=-1
(PongGame::6042:INCREMENTSP)
@SP
M=M+1
// not
@SP
M=M-1
@SP
A=M
D=M
@SP
A=M
M=!D
@SP
M=M+1
// if-goto moveBall:ifStatement:55:END
@SP
M=M-1
@SP
A=M
D=M
@moveBall:ifStatement:55:END
D;JNE
// push constant 1
@1
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label moveBall:ifStatement:55:END
(moveBall:ifStatement:55:END)
// label moveBall:ifStatement:53:END
(moveBall:ifStatement:53:END)
// push this 6
@THIS
D=M
@6
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 2
@2
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// pop this 6
@THIS
D=M
@6
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 0
@THIS
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 6
@THIS
D=M
@6
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Bat.setWidth 2
@PongGame:Bat.setWidth:6172:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Bat.setWidth
0;JMP
(PongGame:Bat.setWidth:6172:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
D=M+D
@SP
A=M
M=D
@SP
M=M+1
// pop this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 22
@22
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 7
@7
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Output.moveCursor 2
@PongGame:Output.moveCursor:6326:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.moveCursor
0;JMP
(PongGame:Output.moveCursor:6326:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push this 4
@THIS
D=M
@4
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Output.printInt 1
@PongGame:Output.printInt:6418:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Output.printInt
0;JMP
(PongGame:Output.printInt:6418:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label moveBall:ifStatement:52:END
(moveBall:ifStatement:52:END)
// label moveBall:ifStatement:50:END
(moveBall:ifStatement:50:END)
// push this 1
@THIS
D=M
@1
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Ball.bounce 2
@PongGame:Ball.bounce:6526:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Ball.bounce
0;JMP
(PongGame:Ball.bounce:6526:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// label moveBall:ifStatement:43:END
(moveBall:ifStatement:43:END)
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Main.main 1
(Main.main)
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call PongGame.newInstance 0
@Main:PongGame.newInstance:12:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.newInstance
0;JMP
(Main:PongGame.newInstance:12:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// call PongGame.getInstance 0
@Main:PongGame.getInstance:90:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.getInstance
0;JMP
(Main:PongGame.getInstance:90:RETURN)
// pop local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call PongGame.run 1
@Main:PongGame.run:184:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.run
0;JMP
(Main:PongGame.run:184:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push local 0
@LCL
D=M
@0
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// call PongGame.dispose 1
@Main:PongGame.dispose:276:RETURN
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@PongGame.dispose
0;JMP
(Main:PongGame.dispose:276:RETURN)
// pop temp 0
@5
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
// push constant 0
@0
D=A
@R13
M=D
@R13
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@R13
M=D
@R13
D=M
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@R13
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@R13
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@R13
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
